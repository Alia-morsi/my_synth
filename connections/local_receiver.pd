#N canvas 523 225 598 513 10;
#X obj 236 17 route list;
#X floatatom 237 95 5 0 0 0 - - -;
#X obj 235 56 route /c /csharp /d /dsharp /e /f /fsharp /g /gsharp
/a /asharp /b, f 66;
#X floatatom 278 95 5 0 0 0 - - -;
#X obj 317 243 netreceive -u -b;
#X msg 317 216 listen 54321;
#X text 235 139 This code reads whatever from multicast;
#N canvas 0 23 450 300 oscparse-mobmuplat 0;
#X obj 58 127 oscparse;
#X obj 39 155 list tosymbol;
#X obj 75 199 list split 1;
#X obj 159 198 list;
#X obj 133 314 int;
#X obj 133 338 + 1;
#X obj 125 291 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 125 378 5 0 0 0 - - -;
#X msg 159 290 0;
#X obj 59 398 list split 2;
#X obj 35 437 list append;
#X obj 75 224 sel 0;
#X obj 99 245 t b f;
#X obj 125 268 sel 47;
#X text 190 40 1) look at bytes \, count number of 47 (/) befoer zero
= N 2) split off first N items (the address components) from oscparse
output \, keep the rest 3) use tosymbol to get unparse address \, prepend
it to values.;
#X obj 36 63 t l l l b, f 12;
#X text 117 225 stop iterating on zero;
#X text 161 378 how many elements the address was split into;
#X text 130 156 gets address (symbol up until the null delimiter character)
;
#X obj 35 6 inlet;
#X obj 31 462 outlet;
#X connect 0 0 9 0;
#X connect 1 0 10 0;
#X connect 2 0 11 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 7 0;
#X connect 6 0 4 0;
#X connect 7 0 9 1;
#X connect 8 0 4 1;
#X connect 9 1 10 1;
#X connect 10 0 20 0;
#X connect 11 1 12 0;
#X connect 12 0 3 0;
#X connect 12 1 13 0;
#X connect 13 0 6 0;
#X connect 15 0 1 0;
#X connect 15 1 0 0;
#X connect 15 2 2 0;
#X connect 15 3 8 0;
#X connect 19 0 15 0;
#X restore 317 273 pd oscparse-mobmuplat;
#X text 454 271 from the outside \, the inlet needs a loadbang;
#X obj 317 307 outlet;
#X obj 317 183 inlet;
#X msg 144 191 connect 224.0.0.1 54321;
#X obj 144 162 loadbang;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 7 0 9 0;
#X connect 10 0 5 0;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
